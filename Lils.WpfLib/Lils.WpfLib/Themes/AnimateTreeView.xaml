<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Lils.WpfLib.Controls">

    <ControlTemplate x:Key="DefaultAnimateTreeViewItemTemplate" TargetType="{x:Type controls:AnimateTreeViewItem}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HeaderMouseOverVisualOpacityTo100">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="HeaderMouseOverVisual">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SelectedVisualOpacityTo100">
                <DoubleAnimationUsingKeyFrames
                    Storyboard.TargetProperty="(UIElement.Opacity)"
                    Storyboard.TargetName="SelectedVisual">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SelectedInactiveVisualOpacityTo100">
                <DoubleAnimationUsingKeyFrames
                    Storyboard.TargetProperty="(UIElement.Opacity)"
                    Storyboard.TargetName="SelectedInactiveVisual">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            
            <ControlTemplate x:Key="AnimateTreeViewItemExpanderTemplate" TargetType="{x:Type ToggleButton}">
                <ControlTemplate.Resources>
                    <Storyboard x:Key="ExpanderRotate90Degree">
                        <DoubleAnimationUsingKeyFrames
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                    Storyboard.TargetName="ExpandBorder">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="90" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </ControlTemplate.Resources>
                <Border x:Name="Root" Background="Transparent">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CheckStates">
                            <VisualStateGroup.Transitions>
                                <VisualTransition GeneratedDuration="0:0:0.3" />
                            </VisualStateGroup.Transitions>
                            <VisualState x:Name="Checked" Storyboard="{StaticResource ExpanderRotate90Degree}" />
                            <VisualState x:Name="Unchecked" />
                            <VisualState x:Name="Indeterminate" />
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid x:Name="LayoutRoot">
                        <Border Name="ExpandBorder" Width="20" Height="20" BorderThickness="0"
                        RenderTransformOrigin=".5,.5">
                            <Path Data="M0,0 L0,2 L1,1 Z" Fill="Gray" Stretch="Uniform" Margin="5" />
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                </Border>
            </ControlTemplate>

            <SolidColorBrush x:Key="AnimateTreeViewItem.Background.Normal" Color="LightGray" />
            <SolidColorBrush x:Key="AnimateTreeViewItem.Background.MouseOver" Color="#FFFFF29D" />
            <SolidColorBrush x:Key="AnimateTreeViewItem.Background.Selected" Color="#88007ACC" />
            <SolidColorBrush x:Key="AnimateTreeViewItem.Background.SelectedInactive" Color="#44007ACC" />
        </ControlTemplate.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="20" Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HeaderCommonStates">
                    <VisualState x:Name="HeaderNormal" />
                    <VisualState x:Name="HeaderMouseOver"
                                 Storyboard="{StaticResource HeaderMouseOverVisualOpacityTo100}" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Selected"
                                 Storyboard="{StaticResource SelectedVisualOpacityTo100}" />
                    <VisualState x:Name="SelectedInactive"
                                 Storyboard="{StaticResource SelectedInactiveVisualOpacityTo100}" />
                    <VisualState x:Name="Unselected" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Grid.Row="0" Grid.Column="0">
                <ToggleButton x:Name="PART_Expander"
                              Grid.Column="0"
                              Panel.ZIndex="10"
                              ClickMode="Press"
                              IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              Foreground="{TemplateBinding Foreground}"
                              Template="{DynamicResource AnimateTreeViewItemExpanderTemplate}" />
            </Grid>
            <Border Name="PART_HeaderBorder"
                    Grid.Row="0" Grid.Column="1"
                    Background="Transparent"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                <Grid>
                    <Rectangle x:Name="NormalVisual"
                               Fill="{DynamicResource AnimateTreeViewItem.Background.Normal}"
                               Opacity="0" />
                    <Rectangle x:Name="SelectedVisual"
                               Fill="{DynamicResource AnimateTreeViewItem.Background.Selected}"
                               Opacity="0" />
                    <Rectangle x:Name="SelectedInactiveVisual"
                               Fill="{DynamicResource AnimateTreeViewItem.Background.SelectedInactive}"
                               Opacity="0" />
                    <Rectangle x:Name="HeaderMouseOverVisual"
                               Fill="{DynamicResource AnimateTreeViewItem.Background.MouseOver}"
                               Opacity="0" />
                    <ContentPresenter ContentSource="Header"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <ToggleButton Name="CoverToggle" Background="Transparent"
                                  IsChecked="{Binding ElementName=PART_Expander, Path=IsChecked}"
                                  Visibility="Collapsed">
                        <ToggleButton.Template>
                            <ControlTemplate>
                                <Rectangle Fill="{TemplateBinding Background}" />
                            </ControlTemplate>
                        </ToggleButton.Template>
                    </ToggleButton>
                </Grid>
            </Border>
            <StackPanel x:Name="PART_AnimateTarget" Grid.Column="1" Grid.Row="1"
                        VerticalAlignment="Top" Height="0">
                <ItemsPresenter x:Name="PART_ItemsHost" />
            </StackPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Visibility" TargetName="PART_Expander" Value="Hidden" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="HasItems" Value="True" />
                    <Condition Property="IsBranchSelectionEnable" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Visibility" TargetName="CoverToggle" Value="Visible" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type controls:AnimateTreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="AnimateTime"
                Value="{Binding AnimateTime, RelativeSource={RelativeSource AncestorType={x:Type controls:AnimateTreeView}}}" />
        <Setter Property="IsBranchSelectionEnable"
                Value="{Binding IsBranchSelectionEnable, RelativeSource={RelativeSource AncestorType={x:Type controls:AnimateTreeView}}}" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="Template" Value="{StaticResource DefaultAnimateTreeViewItemTemplate}" />
    </Style>

    <ControlTemplate x:Key="AnimateTreeView" TargetType="{x:Type controls:AnimateTreeView}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}">
            <ScrollViewer VerticalScrollBarVisibility="Auto" IsTabStop="False">
                <ItemsPresenter />
            </ScrollViewer>
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type controls:AnimateTreeView}">
        <Setter Property="Template" Value="{StaticResource AnimateTreeView}" />
    </Style>

</ResourceDictionary>